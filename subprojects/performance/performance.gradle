/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.gradlebuild.unittestandcompile.ModuleType

import java.util.concurrent.TimeUnit

apply from: 'templates.gradle'

dependencies {
    performanceTestImplementation project(":baseServices")
    performanceTestImplementation project(":core")
    performanceTestImplementation project(":modelCore")
    performanceTestImplementation project(":coreApi")
    performanceTestImplementation project(":buildOption")
    performanceTestImplementation project(":internalIntegTesting")
    performanceTestImplementation libraries.slf4j_api.coordinates
    performanceTestImplementation libraries.commons_io.coordinates
    performanceTestImplementation libraries.commons_compress.coordinates
    performanceTestImplementation testLibraries.jetty
    performanceTestImplementation(testFixtures(project(":toolingApi")))

    // so that all Gradle features are available
    performanceTestRuntimeOnly allTestRuntimeDependencies
}

configurations.partialDistribution {
    exclude(group: "org.gradle.profiler", module: "gradle-profiler")
}

gradlebuildJava {
    moduleType = ModuleType.INTERNAL
}
